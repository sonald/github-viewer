var gh = require('./github-proxy');
var assert = require('assert');

function run_test(testcase) {
    var repo = new gh.Repo('sonald', 'semacs');
    testcase(repo);
}

// run_test(function(repo) {
//     repo.updateRefsCache(function(err) {
//         assert.ok(!err);
//         assert.ok(repo._refs);
//         assert.equal(repo._refs.length, 1);
//     });

// });

// run_test(function(repo) {
//     assert.ok(!repo._branch);

//     repo.changeBranch('master', function(err) {
//         if (!err)
//             assert.equal(repo._branch, repo._refs[0]);
//         else
//             console.log(err);
//     });
// });

// run_test(function(repo) {
//     repo.showRefs(function(err, refs) {
//         assert.equal(refs.length, 1);

//     });
// });

// run_test(function(repo) {
//     repo.changeBranch('heads/master', function(err) {
//         if (!err) {
//             assert.ok(repo.currentBranch().ref.indexOf('heads/master') > -1);
//         }
//     });
// });

// run_test(function(repo) {
//     repo.changeBranch('master', function(err) {
//         repo.getCommit(repo.currentBranch().object.sha, function(err, commit) {
//             assert.equal(repo._branch.object.sha, commit.sha);
//         });
//     });
// });

// run_test(function(repo) {
//     repo.changeBranch('master', function(err) {

//         repo.getCommit(repo.currentBranch().object.sha, function(err, commit) {
//             // console.log(commit);
//             commit.getParents(function(err, parents) {
//                 assert.equal(parents.length, 1);
//             });
//         });
//     });
// });


// run_test(function(repo) {
//     var nr_commits = 0;

//     repo.changeBranch('master', function(err) {
//         var stream = repo.createCommitStream();
//         stream.on('data', function(commit) {
//             nr_commits++;
//             console.log('[%s] - %s', commit.sha.slice(0,6), commit.author.date);
//         });

//         stream.on('end', function(commit) {
//             console.log('commits end');
//             assert.equal(nr_commits, 15);
//         });
//     });
// });

run_test(function(repo) {
    var nr_commits = 0;

    repo.changeBranch('master', function(err) {
        var stream = repo.createCommitStream();
        stream.on('data', function(commit) {
            nr_commits++;
            console.log('[%s] - %s', commit.sha.slice(0,6), commit.author.date);
            if (nr_commits === 4) {
                stream.pause();
                setTimeout(function() {
                    console.log('resume');
                    stream.resume();
                }, 4000);
            }
        });

        stream.on('end', function(commit) {
            console.log('commits end');
            assert.equal(nr_commits, 15);
        });
    });
});

